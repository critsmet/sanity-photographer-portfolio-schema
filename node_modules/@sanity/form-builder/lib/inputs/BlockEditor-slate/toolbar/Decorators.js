"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.decorator = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _button = _interopRequireDefault(require("part:@sanity/components/toggles/button"));

var _formatBoldIcon = _interopRequireDefault(require("part:@sanity/base/format-bold-icon"));

var _formatItalicIcon = _interopRequireDefault(require("part:@sanity/base/format-italic-icon"));

var _formatStrikethroughIcon = _interopRequireDefault(require("part:@sanity/base/format-strikethrough-icon"));

var _formatUnderlinedIcon = _interopRequireDefault(require("part:@sanity/base/format-underlined-icon"));

var _formatCodeIcon = _interopRequireDefault(require("part:@sanity/base/format-code-icon"));

var _sanityLogoIcon = _interopRequireDefault(require("part:@sanity/base/sanity-logo-icon"));

var _Decorators = _interopRequireDefault(require("./styles/Decorators.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const decorator = _propTypes.default.shape({
  active: _propTypes.default.bool,
  type: _propTypes.default.string
});

exports.decorator = decorator;

class Decorators extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "renderDecoratorButton", item => {
      const onClick = event => {
        this.props.onClick(item);
      };

      const Icon = this.getIcon(item.type);
      let title = item.type;
      title = title.charAt(0).toUpperCase() + title.slice(1);
      return _react.default.createElement(_button.default, {
        key: `decoratorButton${item.type}`,
        selected: !!item.active,
        onClick: onClick,
        title: title,
        className: _Decorators.default.button,
        icon: Icon
      });
    });
  }

  getIcon(type) {
    switch (type) {
      case 'strong':
        return _formatBoldIcon.default;

      case 'em':
        return _formatItalicIcon.default;

      case 'underline':
        return _formatUnderlinedIcon.default;

      case 'strike-through':
        return _formatStrikethroughIcon.default;

      case 'code':
        return _formatCodeIcon.default;

      default:
        return _sanityLogoIcon.default;
    }
  }

  render() {
    return this.props.decorators ? _react.default.createElement("div", {
      className: _Decorators.default.root
    }, this.props.decorators.map(this.renderDecoratorButton)) : null;
  }

}

exports.default = Decorators;

_defineProperty(Decorators, "propTypes", {
  onClick: _propTypes.default.func,
  decorators: _propTypes.default.arrayOf(decorator)
});