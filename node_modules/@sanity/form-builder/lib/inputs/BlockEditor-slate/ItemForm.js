"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _FormBuilderPropTypes = _interopRequireDefault(require("../../FormBuilderPropTypes"));

var _SimpleFocusManager = _interopRequireDefault(require("../../sanity/focusManagers/SimpleFocusManager"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ItemForm extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "handleChange", event => {
      const onChange = this.props.onChange;
      onChange(event);
    });
  }

  resolveInputComponent(type, fieldType) {
    return this.context.formBuilder.resolveInputComponent(type, fieldType);
  }

  render() {
    const _this$props = this.props,
          value = _this$props.value,
          type = _this$props.type,
          level = _this$props.level;
    const InputComponent = this.context.formBuilder.resolveInputComponent(type);

    if (!InputComponent) {
      return _react.default.createElement("div", null, "No input component resolved for type ", `"${type.name}"`);
    }

    return _react.default.createElement(_SimpleFocusManager.default, null, ({
      onFocus,
      onBlur,
      focusPath
    }) => _react.default.createElement(InputComponent, {
      value: value,
      type: type,
      level: level,
      onChange: this.handleChange,
      onFocus: onFocus,
      focusPath: focusPath,
      onBlur: onBlur
    }));
  }

}

exports.default = ItemForm;

_defineProperty(ItemForm, "propTypes", {
  type: _FormBuilderPropTypes.default.type.isRequired,
  value: _propTypes.default.any,
  level: _propTypes.default.number,
  onChange: _propTypes.default.func
});

_defineProperty(ItemForm, "contextTypes", {
  formBuilder: _propTypes.default.object
});