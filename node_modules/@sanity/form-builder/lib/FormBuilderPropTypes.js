"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// todo: fix issue with type being a cicular proptype. Should probably replace all this with flowtypes
function lazy(fn) {
  let cachedFn;
  return (...args) => (cachedFn || (cachedFn = fn()))(...args);
}

const field = _propTypes.default.shape({
  name: _propTypes.default.string,
  type: _propTypes.default.object
});

const type = _propTypes.default.shape({
  name: _propTypes.default.string,
  title: _propTypes.default.string,
  description: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  type: lazy(() => type),
  to: lazy(() => _propTypes.default.arrayOf(type)),
  fields: lazy(() => _propTypes.default.arrayOf(field)),
  of: lazy(() => _propTypes.default.arrayOf(type))
});

const schema = _propTypes.default.shape({
  name: _propTypes.default.string,
  fields: _propTypes.default.arrayOf(type)
});

var _default = {
  type,
  field,
  schema
};
exports.default = _default;