"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _union2 = _interopRequireDefault(require("lodash/union"));

var _throttle2 = _interopRequireDefault(require("lodash/throttle"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _operators = require("rxjs/operators");

var _document = _interopRequireDefault(require("part:@sanity/base/datastore/document"));

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function deprecatedCheck(props, propName, componentName, ...rest) {
  if (_react.default.isValidElement(props[propName])) {
    return new Error(`Passing a React element as ${propName} to ${componentName} is deprecated. Use a function instead.`);
  }

  return _propTypes.default.func.isRequired(props, propName, componentName, ...rest);
}

function createInitialState() {
  return {
    result: null,
    complete: false,
    loading: true,
    error: false
  };
}

function keysEqual(object, otherObject, excludeKeys = []) {
  const objectKeys = Object.keys(object).filter(key => !excludeKeys.includes(key));
  const otherObjectKeys = Object.keys(otherObject).filter(key => !excludeKeys.includes(key));

  if (objectKeys.length !== otherObjectKeys.length) {
    return false;
  }

  return (0, _union2.default)(objectKeys, otherObjectKeys).every(key => object[key] === otherObject[key]);
}

const RESPOND_TO_TRANSITIONS = ['appear', 'disappear', 'update' // todo: remove this
];

class QueryContainer extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", createInitialState());

    _defineProperty(this, "next", event => {
      switch (event.type) {
        case 'snapshot':
          {
            this.setState({
              error: null,
              loading: false,
              result: {
                documents: event.documents
              }
            });
            break;
          }

        case 'mutation':
          {
            this.receiveMutations(event);
            break;
          }

        default:
      }
    });

    _defineProperty(this, "error", error => {
      // @todo make sure some kind of error dialog is shown, somewhere
      console.error(error); // eslint-disable-line no-console

      this.setState({
        error,
        loading: false
      });
    });

    _defineProperty(this, "complete", () => {
      this.setState({
        complete: true,
        loading: false
      });
    });

    _defineProperty(this, "refresh", (0, _throttle2.default)(() => {
      this.subscribe(this.props.query, this.props.params);
    }, 1000, {
      leading: true,
      trailing: true
    }));
  }

  componentWillMount() {
    this.subscribe(this.props.query, this.props.params);
  }

  componentWillUnmount() {
    this.unsubscribe();
  }

  subscribe(query, params) {
    this.unsubscribe();
    this._subscription = _document.default.query(query, params).pipe((0, _operators.filter)(event => event.type === 'snapshot' || RESPOND_TO_TRANSITIONS.includes(event.transition))).subscribe(this);
  }

  receiveMutations(event) {
    // todo: apply mutations on this.state.collection
    // just resubcribing for now.

    /*
    const exampleEvent = {
      type: 'mutation',
      eventId: 'yr50wh-mzc-lby-hcf-3zumkc867#public/hi3HUGlrHu2c292ZddrZes',
      documentId: 'public/hi3HUGlrHu2c292ZddrZes',
      transactionId: 'yr50wh-mzc-lby-hcf-3zumkc867',
      transition: 'disappear',
      identity: 'Z29vZ2xlX29hdXRoMjo6MTA2MTc2MDY5MDI1MDA3MzA5MTAwOjozMjM=',
      mutations: [
        {
          delete: {
            id: 'public/hi3HUGlrHu2c292ZddrZes'
          }
        }
      ],
      previousRev: 'm5qsec-ovr-cv8-i1q-qck9otism',
      resultRev: 'yr50wh-mzc-lby-hcf-3zumkc867',
      timestamp: '2016-12-22T12:24:02.433897Z'
    }
     */
    const result = this.state.result;
    const hasCreateOrDelete = event.type === 'mutation' && event.mutations.some(mut => mut.create || mut.delete && (result.documents || []).some(doc => doc._id === mut.delete.id));

    if (hasCreateOrDelete) {
      this.refresh();
      this.refresh(); // invoke on both ends to make sure we get the refreshed result
    }
  }

  unsubscribe() {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }
  }

  componentWillUpdate(nextProps) {
    const sameQuery = nextProps.query === this.props.query;
    const sameParams = (0, _shallowEquals.default)(nextProps.params, this.props.params);

    if (!sameQuery || !sameParams) {
      this.setState(createInitialState());
      this.subscribe(nextProps.query, nextProps.params);
    }
  }

  shouldComponentUpdate(nextProps, nextState) {
    if (!(0, _shallowEquals.default)(this.state, nextState)) {
      return true;
    }

    if (nextProps.query !== this.props.query || !(0, _shallowEquals.default)(nextProps.params, this.props.params)) {
      return true;
    }

    return !keysEqual(nextProps, this.props, ['mapFn', 'query', 'params']);
  }

  renderDeprecated() {
    return _react.default.cloneElement(_react.default.Children.only(this.props.children), this.props.mapFn(this.state));
  }

  render() {
    const _this$props = this.props,
          children = _this$props.children,
          mapFn = _this$props.mapFn,
          rest = _objectWithoutProperties(_this$props, ["children", "mapFn"]);

    if (_react.default.isValidElement(children)) {
      return this.renderDeprecated();
    }

    if (!children || typeof children !== 'function') {
      return _react.default.createElement("div", null, "Invalid usage of QueryContainer. Expected a function as its only child");
    }

    return children(_objectSpread({}, rest, {
      onRetry: this.refresh
    }, mapFn(this.state)));
  }

}

exports.default = QueryContainer;

_defineProperty(QueryContainer, "propTypes", {
  query: _propTypes.default.string,
  params: _propTypes.default.object,
  mapFn: _propTypes.default.func,
  children: deprecatedCheck
});

_defineProperty(QueryContainer, "defaultProps", {
  mapFn: props => props
});