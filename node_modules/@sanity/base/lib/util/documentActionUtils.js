"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isActionEnabled = exports.resolveEnabledActions = void 0;

var _difference2 = _interopRequireDefault(require("lodash/difference"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ACTIONS_FLAG = '__experimental_actions';
const DEFAULT_ACTIONS = ['create', 'update', 'delete', 'publish'];
const VALID_ACTIONS = DEFAULT_ACTIONS;

const readActions = schemaType => ACTIONS_FLAG in schemaType ? schemaType[ACTIONS_FLAG] : DEFAULT_ACTIONS;

const validateActions = (typeName, actions) => {
  if (!Array.isArray(actions)) {
    throw new Error(`The value of <type>.${ACTIONS_FLAG} should be an array with any of the actions ${VALID_ACTIONS.join(', ')}`);
  }

  const invalid = (0, _difference2.default)(actions, VALID_ACTIONS);

  if (invalid.length > 0) {
    throw new Error(`Invalid action${invalid.length > 1 ? 's' : ''} configured for schema type "${typeName}": ${invalid.join(', ')}. Valid actions are: ${VALID_ACTIONS.join(', ')}`);
  }

  return actions;
};

const resolveEnabledActions = schemaType => validateActions(schemaType.name, readActions(schemaType));

exports.resolveEnabledActions = resolveEnabledActions;

const isActionEnabled = (schemaType, action) => resolveEnabledActions(schemaType).includes(action);

exports.isActionEnabled = isActionEnabled;