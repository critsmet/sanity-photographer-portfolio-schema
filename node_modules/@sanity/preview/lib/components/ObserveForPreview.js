"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get2 = _interopRequireDefault(require("lodash/get"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

var _warningIcon = _interopRequireDefault(require("part:@sanity/base/warning-icon"));

var _observeForPreview = _interopRequireDefault(require("../observeForPreview"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const INVALID_PREVIEW_FALLBACK = {
  title: _react.default.createElement("span", {
    style: {
      fontStyle: 'italic'
    }
  }, "Invalid preview config"),
  subtitle: _react.default.createElement("span", {
    style: {
      fontStyle: 'italic'
    }
  }, "Check the error log in the console"),
  media: _warningIcon.default
};
const INITIAL_STATE = {
  error: null,
  isLoading: false,
  result: {
    snapshot: null,
    type: null
  }
};

class PreviewSubscriber extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", INITIAL_STATE);
  }

  componentDidMount() {
    this.subscribe(this.props.value, this.props.type, this.props.fields);
  }

  componentWillUnmount() {
    this.unsubscribe();
  }

  unsubscribe() {
    if (this.subscription) {
      this.subscription.unsubscribe();
      this.subscription = null;
    }
  }

  componentWillUpdate(nextProps) {
    if ((0, _get2.default)(nextProps, 'value._id') !== (0, _get2.default)(this.props, 'value._id')) {
      this.setState(INITIAL_STATE);
    }

    if (!(0, _shallowEquals.default)(nextProps.value, this.props.value)) {
      this.subscribe(nextProps.value, nextProps.type);
    }
  }

  subscribe(value, type, fields) {
    this.unsubscribe();
    const viewOptions = this.props.ordering ? {
      ordering: this.props.ordering
    } : {};
    this.setState({
      isLoading: true
    });
    this.subscription = (0, _observeForPreview.default)(value, type, fields, viewOptions).subscribe(result => {
      this.setState({
        isLoading: false,
        result
      });
    });
  }

  render() {
    const _this$state = this.state,
          result = _this$state.result,
          error = _this$state.error,
          isLoading = _this$state.isLoading;
    const children = this.props.children;
    const snapshot = result.snapshot === _constants.INVALID_PREVIEW_CONFIG ? INVALID_PREVIEW_FALLBACK : result.snapshot;
    return children({
      result: _objectSpread({}, result, {
        snapshot
      }),
      error,
      isLoading
    });
  }

}

exports.default = PreviewSubscriber;

_defineProperty(PreviewSubscriber, "propTypes", {
  type: _propTypes.default.object.isRequired,
  fields: _propTypes.default.arrayOf(_propTypes.default.oneOf(['title', 'description', 'imageUrl'])),
  value: _propTypes.default.any.isRequired,
  ordering: _propTypes.default.object,
  children: _propTypes.default.func
});