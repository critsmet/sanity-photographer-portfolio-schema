import { SerializeOptions } from './StructureNodes';
import { ListItem, ListItemBuilder } from './ListItem';
import { GenericListBuilder, BuildableGenericList, GenericList, GenericListInput } from './GenericList';
export interface List extends GenericList {
    items: ListItem[];
}
export interface ListInput extends GenericListInput {
    items?: (ListItem | ListItemBuilder)[];
}
export interface BuildableList extends BuildableGenericList {
    items?: (ListItem | ListItemBuilder)[];
}
export declare class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {
    protected spec: BuildableList;
    constructor(spec?: ListInput);
    items(items: (ListItemBuilder | ListItem)[]): ListBuilder;
    getItems(): (ListItem | ListItemBuilder)[] | undefined;
    serialize(options?: SerializeOptions): List;
    clone(withSpec?: BuildableList): ListBuilder;
}
//# sourceMappingURL=List.d.ts.map