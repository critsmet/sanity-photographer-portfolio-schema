import { StructureNode, SerializeOptions, Serializable, Child } from './StructureNodes';
import { Layout } from './Layout';
import { MenuItem, MenuItemBuilder } from './MenuItem';
import { MenuItemGroup, MenuItemGroupBuilder } from './MenuItemGroup';
import { IntentChecker } from './Intent';
export interface BaseGenericList extends StructureNode {
    defaultLayout?: Layout;
    canHandleIntent?: IntentChecker;
    child: Child;
}
export interface GenericList extends BaseGenericList {
    type: string;
    menuItems: MenuItem[];
    menuItemGroups: MenuItemGroup[];
}
export interface BuildableGenericList extends Partial<BaseGenericList> {
    menuItems?: (MenuItem | MenuItemBuilder)[];
    menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[];
}
export interface GenericListInput extends StructureNode {
    id: string;
    title: string;
    menuItems?: (MenuItem | MenuItemBuilder)[];
    menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[];
    defaultLayout?: Layout;
    canHandleIntent?: IntentChecker;
    child?: Child;
}
export declare abstract class GenericListBuilder<L extends BuildableGenericList, ConcreteImpl> implements Serializable {
    protected spec: L;
    id(id: string): ConcreteImpl;
    getId(): string | undefined;
    title(title: string): ConcreteImpl;
    getTitle(): string | undefined;
    defaultLayout(defaultLayout: Layout): ConcreteImpl;
    getDefaultLayout(): "default" | "media" | "card" | "detail" | "block" | undefined;
    menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ConcreteImpl;
    getMenuItems(): (MenuItem | MenuItemBuilder)[] | undefined;
    menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl;
    getMenuItemGroups(): (MenuItemGroup | MenuItemGroupBuilder)[] | undefined;
    child(child: Child): ConcreteImpl;
    getChild(): import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/Editor").EditorBuilder | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/StructureNodes").EditorNode | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/List").List | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/DocumentList").DocumentList | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/Component").Component | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/List").ListBuilder | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/DocumentList").DocumentListBuilder | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/Component").ComponentBuilder | import("../../../../../../../../Users/espenh/webdev/sanity-review/packages/@sanity/structure/src/ChildResolver").ChildResolver | undefined;
    canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl;
    getCanHandleIntent(): IntentChecker | undefined;
    serialize(options?: SerializeOptions): GenericList;
    clone(withSpec?: object): ConcreteImpl;
}
//# sourceMappingURL=GenericList.d.ts.map