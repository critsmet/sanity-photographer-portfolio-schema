"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = withReferringDocuments;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _document = _interopRequireDefault(require("part:@sanity/base/datastore/document"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function withReferringDocuments(Component) {
  var _class, _temp;

  return _temp = _class = class extends _react.default.PureComponent {
    constructor(...args) {
      super(...args);

      _defineProperty(this, "state", {
        isLoading: false,
        referringDocuments: []
      });
    }

    componentDidMount() {
      const published = this.props.published;

      if (!published) {
        return;
      }

      this.setState({
        isLoading: true
      });
      this.refSubscription = _document.default.query('*[references($docId)] [0...101]', {
        docId: published._id
      }).subscribe(event => {
        this.setState({
          referringDocuments: event.documents || [],
          isLoading: false
        });
      });
    }

    componentWillUnmount() {
      if (this.refSubscription) {
        this.refSubscription.unsubscribe();
      }
    }

    render() {
      const _this$state = this.state,
            isLoading = _this$state.isLoading,
            referringDocuments = _this$state.referringDocuments;
      return _react.default.createElement(Component, _extends({}, this.props, {
        referringDocuments: referringDocuments,
        isCheckingReferringDocuments: isLoading
      }));
    }

  }, _defineProperty(_class, "displayName", `enhanceWithAvailHeight(${Component.displayName || Component.name})`), _defineProperty(_class, "propTypes", {
    published: _propTypes.default.object
  }), _temp;
}