"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PaneItem;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _DocumentPaneItemPreview = _interopRequireDefault(require("../components/DocumentPaneItemPreview"));

var _SimplePaneItemPreview = _interopRequireDefault(require("../components/SimplePaneItemPreview"));

var _MissingSchemaType = _interopRequireDefault(require("../components/MissingSchemaType"));

var _PaneItemWrapper = _interopRequireDefault(require("./PaneItemWrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PaneItem(props) {
  const id = props.id,
        getLinkState = props.getLinkState,
        isSelected = props.isSelected,
        schemaType = props.schemaType,
        layout = props.layout,
        icon = props.icon,
        value = props.value;
  const useGrid = layout === 'card' || layout === 'media';

  const hasSchemaType = schemaType && schemaType.name && _schema.default.get(schemaType.name);

  let preview;

  if (value && value._id) {
    preview = hasSchemaType ? _react.default.createElement(_DocumentPaneItemPreview.default, {
      icon: icon,
      layout: layout,
      schemaType: schemaType,
      value: value
    }) : _react.default.createElement(_MissingSchemaType.default, {
      value: value
    });
  } else {
    preview = _react.default.createElement(_SimplePaneItemPreview.default, {
      icon: icon || schemaType && schemaType.icon,
      layout: layout,
      value: value
    });
  }

  return _react.default.createElement(_PaneItemWrapper.default, {
    linkState: getLinkState(id),
    isSelected: isSelected,
    layout: layout,
    useGrid: useGrid
  }, preview);
}

PaneItem.propTypes = {
  id: _propTypes.default.string.isRequired,
  getLinkState: _propTypes.default.func.isRequired,
  layout: _propTypes.default.string,
  isSelected: _propTypes.default.bool,
  icon: _propTypes.default.func,
  value: _propTypes.default.shape({
    _id: _propTypes.default.string,
    _type: _propTypes.default.string,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    media: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func])
  }),
  schemaType: _propTypes.default.shape({
    name: _propTypes.default.string,
    icon: _propTypes.default.func
  })
};
PaneItem.defaultProps = {
  layout: 'default',
  value: null,
  isSelected: false,
  schemaType: null
};