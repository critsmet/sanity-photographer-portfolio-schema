"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.listItem = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _formatListBulletedIcon = _interopRequireDefault(require("part:@sanity/base/format-list-bulleted-icon"));

var _formatListNumberedIcon = _interopRequireDefault(require("part:@sanity/base/format-list-numbered-icon"));

var _sanityLogoIcon = _interopRequireDefault(require("part:@sanity/base/sanity-logo-icon"));

var _button = _interopRequireDefault(require("part:@sanity/components/toggles/button"));

var _ListItems = _interopRequireDefault(require("./styles/ListItems.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const listItem = _propTypes.default.shape({
  active: _propTypes.default.bool,
  type: _propTypes.default.string,
  title: _propTypes.default.string
});

exports.listItem = listItem;

class ListItem extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "renderButton", listFormat => {
      const onClick = event => {
        this.props.onClick(listFormat.type, listFormat.active);
      };

      const Icon = this.getIcon(listFormat.type);
      return _react.default.createElement(_button.default, {
        key: `listButton${listFormat.type}`,
        selected: listFormat.active,
        onClick: onClick,
        title: listFormat.title,
        icon: Icon
      });
    });
  }

  getIcon(type) {
    switch (type) {
      case 'number':
        return _formatListNumberedIcon.default;

      case 'bullet':
        return _formatListBulletedIcon.default;

      default:
        return _sanityLogoIcon.default;
    }
  }

  render() {
    return _react.default.createElement("div", {
      className: _ListItems.default.root
    }, this.props.listItems.map(this.renderButton));
  }

}

exports.default = ListItem;

_defineProperty(ListItem, "propTypes", {
  onClick: _propTypes.default.func,
  listItems: _propTypes.default.arrayOf(listItem)
});