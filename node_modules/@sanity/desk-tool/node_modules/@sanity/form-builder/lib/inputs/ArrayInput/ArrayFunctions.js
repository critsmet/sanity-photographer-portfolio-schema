"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _dropdown = _interopRequireDefault(require("part:@sanity/components/buttons/dropdown"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _buttonCollection = _interopRequireDefault(require("part:@sanity/components/buttons/button-collection"));

var _ArrayInput = _interopRequireDefault(require("./styles/ArrayInput.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ArrayFunctions extends _react.default.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "handleDropDownAction", menuItem => {
      this.handleInsertItem(menuItem.type);
    });

    _defineProperty(this, "handleAddBtnClick", () => {
      this.handleInsertItem(this.props.type.of[0]);
    });

    _defineProperty(this, "handleInsertItem", type => {
      const _this$props = this.props,
            onCreateValue = _this$props.onCreateValue,
            onAppendItem = _this$props.onAppendItem;
      const item = onCreateValue(type);
      onAppendItem(item);
    });
  }

  renderSelectType() {
    const items = this.props.type.of.map(memberDef => ({
      title: memberDef.title || memberDef.type.name,
      type: memberDef
    }));
    return _react.default.createElement(_dropdown.default, {
      items: items,
      onAction: this.handleDropDownAction
    }, "Add");
  }

  render() {
    const _this$props2 = this.props,
          type = _this$props2.type,
          readOnly = _this$props2.readOnly,
          children = _this$props2.children;

    if (readOnly) {
      return null;
    }

    return _react.default.createElement("div", {
      className: _ArrayInput.default.functions
    }, _react.default.createElement(_buttonCollection.default, {
      align: "start"
    }, type.of.length === 1 ? _react.default.createElement(_default.default, {
      onClick: this.handleAddBtnClick,
      className: _ArrayInput.default.addButton
    }, "Add") : this.renderSelectType(), children || null));
  }

}

exports.default = ArrayFunctions;