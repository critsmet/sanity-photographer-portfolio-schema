"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _foldStyle = _interopRequireDefault(require("part:@sanity/components/edititem/fold-style"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class EditItemFoldOut extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "setRootElement", element => {
      this._rootElement = element;
    });

    _defineProperty(this, "setPortalModalElement", element => {
      this._portalModalElement = element;
    });
  }

  componentDidMount() {
    window.addEventListener('keydown', this.handleKeyDown);
  }

  componentWillUnmount() {
    window.removeEventListener('keydown', this.handleKeyDown);
  }

  render() {
    const _this$props = this.props,
          title = _this$props.title,
          onClose = _this$props.onClose,
          children = _this$props.children;
    return _react.default.createElement("div", {
      className: _foldStyle.default.root
    }, _react.default.createElement("div", {
      className: _foldStyle.default.wrapper
    }, title && _react.default.createElement("div", {
      className: _foldStyle.default.head
    }, title, _react.default.createElement("button", {
      className: _foldStyle.default.close,
      type: "button",
      onClick: onClose
    }, _react.default.createElement(_closeIcon.default, null))), !title && _react.default.createElement("button", {
      className: _foldStyle.default.closeDark,
      type: "button",
      onClick: this.handleClose
    }, _react.default.createElement(_closeIcon.default, null)), _react.default.createElement("div", {
      className: _foldStyle.default.content
    }, children)));
  }

}

exports.default = EditItemFoldOut;

_defineProperty(EditItemFoldOut, "propTypes", {
  title: _propTypes.default.string,
  children: _propTypes.default.node.isRequired,
  onClose: _propTypes.default.func
});

_defineProperty(EditItemFoldOut, "defaultProps", {
  title: '',

  onClose() {} // eslint-disable-line


});