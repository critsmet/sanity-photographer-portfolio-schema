"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _spinnerStyle = _interopRequireDefault(require("part:@sanity/components/loading/spinner-style"));

var _spinnerIcon = _interopRequireDefault(require("part:@sanity/base/spinner-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Spinner extends _react.default.Component {
  renderSvg() {
    return _react.default.createElement("svg", {
      width: "126px",
      height: "126px",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid"
    }, _react.default.createElement("rect", {
      x: "0",
      y: "0",
      width: "100",
      height: "100",
      fill: "none"
    }), _react.default.createElement("circle", {
      cx: "50",
      cy: "50",
      r: "49.5",
      strokeDasharray: "202.1614872585032 108.85618544688634",
      stroke: "currentColor",
      fill: "none",
      strokeWidth: "1"
    }, _react.default.createElement("animateTransform", {
      attributeName: "transform",
      type: "rotate",
      values: "0 50 50;180 50 50;360 50 50;",
      keyTimes: "0;0.5;1",
      dur: "1s",
      repeatCount: "indefinite",
      begin: "0s"
    })));
  }

  render() {
    const _this$props = this.props,
          inline = _this$props.inline,
          message = _this$props.message,
          fullscreen = _this$props.fullscreen,
          center = _this$props.center;
    return _react.default.createElement("div", {
      className: `
          ${inline ? _spinnerStyle.default.inline : _spinnerStyle.default.block}
          ${fullscreen ? _spinnerStyle.default.fullscreen : ''}
          ${center ? _spinnerStyle.default.center : ''}
        `
    }, _react.default.createElement("div", {
      className: _spinnerStyle.default.inner
    }, fullscreen || center ? this.renderSvg() : _react.default.createElement(_spinnerIcon.default, {
      color: "inherit"
    }), message && _react.default.createElement("div", {
      className: _spinnerStyle.default.message
    }, message)));
  }

}

exports.default = Spinner;

_defineProperty(Spinner, "propTypes", {
  inline: _propTypes.default.bool,
  message: _propTypes.default.string,
  fullscreen: _propTypes.default.bool,
  center: _propTypes.default.bool
});