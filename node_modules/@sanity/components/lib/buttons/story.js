"use strict";

var _react = _interopRequireDefault(require("react"));

var _router = require("part:@sanity/base/router");

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _anchor = _interopRequireDefault(require("part:@sanity/components/buttons/anchor"));

var _intent = _interopRequireDefault(require("part:@sanity/components/buttons/intent"));

var _dropdown = _interopRequireDefault(require("part:@sanity/components/buttons/dropdown"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

var _inInput = _interopRequireDefault(require("part:@sanity/components/buttons/in-input"));

var _inInputStyle = _interopRequireDefault(require("part:@sanity/components/buttons/in-input-style"));

var _storybook = require("part:@sanity/storybook");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _plusIcon = _interopRequireDefault(require("part:@sanity/base/plus-icon"));

var _sanityLogoIcon = _interopRequireDefault(require("part:@sanity/base/sanity-logo-icon"));

var _default3 = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const handleNavigate = () => {
  /* intentional noop */
};

const router = (0, _router.route)('/', [(0, _router.route)('/bikes/:bikeId'), _router.route.intents('/intents')]);

const preventDefault = evt => evt.preventDefault();

const getButtonKinds = () => (0, _knobs.select)('kind (prop)', ['default', 'simple', 'secondary'], 'default');

const getColorKinds = () => (0, _knobs.select)('color (prop)', [false, 'primary', 'success', 'danger', 'white'], false);

const items = [{
  index: '1',
  title: 'Test'
}, {
  index: '2',
  title: 'Test 2'
}, {
  index: '3',
  title: 'Test 3'
}, {
  index: '4',
  title: 'Test 4'
}, {
  index: '5',
  title: 'Test 5'
}, {
  index: '6',
  title: 'Test 6'
}, {
  index: '7',
  title: 'Test 7'
}];
(0, _storybook.storiesOf)('Buttons', module).addDecorator(_knobs.withKnobs).add('Default', () => {
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/buttons/default",
    propTables: [_default.default]
  }, _react.default.createElement(_default.default, {
    kind: getButtonKinds(),
    onClick: (0, _storybook.action)('clicked'),
    disabled: (0, _knobs.boolean)('disabled (prop)', false),
    inverted: (0, _knobs.boolean)('inverted (prop)', false),
    type: (0, _knobs.text)('type (prop)', undefined),
    color: getColorKinds(),
    loading: (0, _knobs.boolean)('Loading (prop)', false),
    icon: (0, _knobs.boolean)('Show test icon', false) ? _sanityLogoIcon.default : false
  }, (0, _knobs.text)('prop: children', 'Touch Me!')));
}).add('Anchor <a>', () => {
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/buttons/anchor",
    propTables: [_default.default]
  }, _react.default.createElement(_anchor.default, {
    kind: getButtonKinds(),
    onClick: (0, _storybook.action)('clicked'),
    disabled: (0, _knobs.boolean)('prop: disabled', false),
    inverted: (0, _knobs.boolean)('prop: inverted', false),
    color: getColorKinds(),
    loading: (0, _knobs.boolean)('prop: loading', false),
    icon: (0, _knobs.boolean)('show test icon', false) ? _sanityLogoIcon.default : false,
    href: (0, _knobs.text)('prop: href', 'http://example.org')
  }, (0, _knobs.text)('prop: children', 'Touch Me!')));
}).add('Examples', () => {
  const disabled = (0, _knobs.boolean)('Disabled', false);
  return _react.default.createElement(_router.RouterProvider, {
    router: router,
    onNavigate: handleNavigate,
    state: router.decode(location.pathname)
  }, _react.default.createElement("form", {
    style: {
      padding: '2rem'
    }
  }, _react.default.createElement("h2", null, "Default"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    disabled: disabled
  }, "Default"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    inverted: true,
    disabled: disabled
  }, "Inverted"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    kind: "simple",
    disabled: disabled
  }, "Simple"), _react.default.createElement("h2", null, "Colors"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    disabled: disabled
  }, "Undefined"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "primary",
    disabled: disabled
  }, "Primary"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "danger",
    disabled: disabled
  }, "Danger"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "success",
    disabled: disabled
  }, "Success"), _react.default.createElement("h2", null, "Colors (inverted)"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    inverted: true,
    disabled: disabled
  }, "Undefined"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "primary",
    inverted: true,
    disabled: disabled
  }, "Primary"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "danger",
    inverted: true,
    disabled: disabled
  }, "Danger"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "success",
    inverted: true,
    disabled: disabled
  }, "Success"), _react.default.createElement(_dropdown.default, {
    items: items,
    onAction: (0, _storybook.action)('Clicked item'),
    disabled: disabled
  }, "Dropdown"), _react.default.createElement("h2", null, "Colors (simple)"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    kind: "simple",
    disabled: disabled
  }, "Undefined"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    kind: "simple",
    color: "primary",
    disabled: disabled
  }, "Primary"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    kind: "simple",
    color: "danger",
    disabled: disabled
  }, "Danger"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    kind: "simple",
    color: "success",
    disabled: disabled
  }, "Success"), _react.default.createElement("h2", null, "With icons"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    disabled: disabled
  }, "With icon"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "danger",
    icon: _sanityLogoIcon.default,
    disabled: disabled
  }, "Colored with icon"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "danger",
    icon: _sanityLogoIcon.default,
    inverted: true,
    disabled: disabled
  }, "Danger, inverted & icon"), _react.default.createElement(_dropdown.default, {
    icon: _sanityLogoIcon.default,
    inverted: true,
    color: "danger",
    items: items,
    onAction: (0, _storybook.action)('Clicked item'),
    disabled: disabled
  }, "Dropdown"), _react.default.createElement("h2", null, "Only icons"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    title: "Default",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    color: "danger",
    title: "Danger",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    inverted: true,
    title: "Inverted",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    inverted: true,
    color: "danger",
    title: "Inverted danger",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    kind: "simple",
    title: "Simple",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    kind: "simple",
    color: "danger",
    title: "Simple danger",
    disabled: disabled
  }), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    icon: _sanityLogoIcon.default,
    kind: "simple",
    color: "primary",
    title: "Simple primary",
    disabled: disabled
  }), _react.default.createElement("h2", null, "Intent buttons with only icons"), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    title: "Default",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    color: "danger",
    title: "Danger",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    inverted: true,
    title: "Inverted",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    inverted: true,
    color: "danger",
    title: "Inverted danger",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    kind: "simple",
    title: "Simple",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    kind: "simple",
    color: "danger",
    title: "Simple danger",
    disabled: disabled
  }), _react.default.createElement(_intent.default, {
    intent: "create",
    params: {
      type: 'book'
    },
    onClick: preventDefault,
    icon: _plusIcon.default,
    kind: "simple",
    color: "primary",
    title: "Simple primary",
    disabled: disabled
  }), _react.default.createElement("h2", null, "On color areas"), _react.default.createElement("div", {
    style: {
      backgroundColor: 'red',
      padding: '1rem'
    }
  }, _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    color: "white",
    disabled: disabled
  }, "White"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    kind: "simple",
    color: "white",
    disabled: disabled
  }, "White simple"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    inverted: true,
    disabled: disabled
  }, "Inverted"), _react.default.createElement(_default.default, {
    onClick: (0, _storybook.action)('clicked'),
    inverted: true,
    color: "white",
    disabled: disabled
  }, "White inverted"))));
}).add('DropDownButton', () => {
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/buttons/dropdown",
    propTables: [_dropdown.default]
  }, _react.default.createElement(_router.RouterProvider, {
    router: router,
    onNavigate: handleNavigate,
    state: router.decode(location.pathname)
  }, _react.default.createElement("div", null, _react.default.createElement(_dropdown.default, {
    items: (0, _knobs.object)('prop: items', items),
    onAction: (0, _storybook.action)('Clicked item'),
    color: getColorKinds(),
    kind: getButtonKinds()
  }, (0, _knobs.text)('prop: children', 'This is a dropdown')), _react.default.createElement("div", null, "This text should be under the menu"))));
}).add('InInput', () => {
  return _react.default.createElement(_sanity.default, {
    part: "part:@sanity/components/buttons/in-input",
    propTables: [_inInput.default]
  }, _react.default.createElement(_default2.default, {
    label: "Default"
  }, _react.default.createElement("div", {
    className: _inInputStyle.default.wrapper
  }, _react.default.createElement(_default3.default, null), _react.default.createElement("div", {
    className: _inInputStyle.default.container
  }, _react.default.createElement(_inInput.default, {
    onAction: (0, _storybook.action)('Clicked item'),
    color: getColorKinds(),
    kind: getButtonKinds()
  }, "browse")))));
});