"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _closeIcon = _interopRequireDefault(require("part:@sanity/base/close-icon"));

var _circleCheckIcon = _interopRequireDefault(require("part:@sanity/base/circle-check-icon"));

var _ConfirmDialog = _interopRequireDefault(require("./styles/ConfirmDialog.css"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _Portal = require("../utilities/Portal");

var _StackedEscapable = _interopRequireDefault(require("../utilities/StackedEscapable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DefaultDialog extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "handleDialogClick", event => {
      event.stopPropagation();
    });

    _defineProperty(this, "setDialogElement", element => {
      this.dialog = element;
    });
  }

  render() {
    const _this$props = this.props,
          color = _this$props.color,
          className = _this$props.className,
          confirmColor = _this$props.confirmColor,
          confirmButtonText = _this$props.confirmButtonText,
          cancelButtonText = _this$props.cancelButtonText,
          onConfirm = _this$props.onConfirm,
          onCancel = _this$props.onCancel;
    return _react.default.createElement(_StackedEscapable.default, {
      onEscape: onCancel
    }, _react.default.createElement(_Portal.Portal, null, _react.default.createElement("div", {
      className: `${_ConfirmDialog.default.root} ${_ConfirmDialog.default[color]} ${className}`,
      ref: this.setDialogElement,
      onClick: onCancel
    }, _react.default.createElement("div", {
      className: _ConfirmDialog.default.dialog,
      onClick: this.handleDialogClick
    }, _react.default.createElement("div", {
      className: _ConfirmDialog.default.inner
    }, _react.default.createElement("div", {
      className: _ConfirmDialog.default.content
    }, this.props.children), _react.default.createElement("div", {
      className: _ConfirmDialog.default.footer
    }, _react.default.createElement(_default.default, {
      onClick: onCancel,
      icon: _closeIcon.default,
      kind: "simple"
    }, cancelButtonText), _react.default.createElement(_default.default, {
      onClick: onConfirm,
      color: confirmColor,
      icon: _circleCheckIcon.default,
      autoFocus: true
    }, confirmButtonText)))))));
  }

}

exports.default = DefaultDialog;

_defineProperty(DefaultDialog, "propTypes", {
  color: _propTypes.default.oneOf(['warning', 'success', 'danger', 'info']),
  confirmColor: _propTypes.default.oneOf(['warning', 'success', 'danger', 'info']),
  className: _propTypes.default.string,
  children: _propTypes.default.node,
  onClose: _propTypes.default.func,
  onConfirm: _propTypes.default.func,
  onCancel: _propTypes.default.func,
  confirmButtonText: _propTypes.default.string,
  cancelButtonText: _propTypes.default.string
});

_defineProperty(DefaultDialog, "defaultProps", {
  isOpen: false,
  showHeader: false,

  onAction() {},

  onOpen() {},

  actions: [],
  kind: 'default',
  confirmColor: 'success',
  confirmButtonText: 'OK',
  cancelButtonText: 'Cancel'
});