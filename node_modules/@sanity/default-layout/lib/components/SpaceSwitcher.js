"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactClickOutside = _interopRequireDefault(require("react-click-outside"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/menus/default"));

var _SpaceSwitcher = _interopRequireDefault(require("./styles/SpaceSwitcher.css"));

var _spaces = require("../util/spaces");

var _urlState = require("../datastores/urlState");

var _router = require("part:@sanity/base/router");

var _arrowDropDown = _interopRequireDefault(require("part:@sanity/base/arrow-drop-down"));

var _operators = require("rxjs/operators");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const currentSpace$ = _urlState.state.pipe((0, _operators.map)(event => event.state && event.state.space), (0, _operators.map)(spaceName => _spaces.CONFIGURED_SPACES.find(sp => sp.name === spaceName)));

class SpaceSwitcher extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      menuOpen: false,
      currentSpace: null
    });

    _defineProperty(this, "handleClickOutside", () => {
      if (this.state.menuOpen) {
        this.setState({
          menuOpen: false
        });
      }
    });

    _defineProperty(this, "handleMenuToggle", () => {
      this.setState(prev => ({
        menuOpen: !prev.menuOpen
      }));
    });

    _defineProperty(this, "handleMenuItemClick", item => {
      this.props.router.navigate({
        space: item.name
      });
      this.setState({
        menuOpen: false
      });
    });
  }

  componentDidMount() {
    this.currentSpaceSubscription = currentSpace$.subscribe(space => {
      this.setState({
        currentSpace: space
      });
    });
  }

  componentWillUnmount() {
    this.currentSpaceSubscription.unsubscribe();
  }

  render() {
    const _this$state = this.state,
          menuOpen = _this$state.menuOpen,
          currentSpace = _this$state.currentSpace;
    const title = currentSpace && currentSpace.title;
    return _react.default.createElement("div", {
      className: _SpaceSwitcher.default.root
    }, _react.default.createElement("div", {
      title: title,
      onClick: this.handleMenuToggle,
      className: _SpaceSwitcher.default.currentSpace
    }, title && `${title}`, _react.default.createElement("span", {
      className: _SpaceSwitcher.default.arrow
    }, _react.default.createElement(_arrowDropDown.default, null))), menuOpen && _react.default.createElement("div", {
      className: _SpaceSwitcher.default.menu
    }, _react.default.createElement(_default2.default, {
      onAction: this.handleMenuItemClick,
      items: _spaces.CONFIGURED_SPACES,
      origin: "bottom-right",
      onClickOutside: this.handleMenuClose
    })));
  }

}

_defineProperty(SpaceSwitcher, "propTypes", {
  router: _propTypes.default.shape({
    navigate: _propTypes.default.func
  })
});

var _default = (0, _router.withRouterHOC)((0, _reactClickOutside.default)(SpaceSwitcher));

exports.default = _default;