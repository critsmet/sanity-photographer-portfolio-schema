"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _router = require("part:@sanity/base/router");

var _ToolSwitcherWidget = _interopRequireDefault(require("./ToolSwitcherWidget"));

var _ToolSwitcherItem = _interopRequireDefault(require("./ToolSwitcherItem"));

var _ToolSwitcherWidget2 = _interopRequireDefault(require("./styles/ToolSwitcherWidget.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ToolSwitcher extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "renderItem", (tool, showIcon) => {
      const _this$props = this.props,
            activeToolName = _this$props.activeToolName,
            isVisible = _this$props.isVisible,
            onSwitchTool = _this$props.onSwitchTool,
            direction = _this$props.direction,
            showLabel = _this$props.showLabel;
      const tabIndex = isVisible ? '0' : '-1';
      return _react.default.createElement(_router.StateLink, {
        state: tool.state,
        onClick: onSwitchTool,
        className: _ToolSwitcherWidget2.default.link,
        tabIndex: tabIndex
      }, _react.default.createElement(_ToolSwitcherItem.default, {
        direction: direction,
        icon: tool.icon,
        showIcon: showIcon,
        showLabel: showLabel,
        title: tool.title || tool.name,
        label: tool.title || tool.name,
        isActive: activeToolName === tool.name
      }));
    });
  }

  render() {
    const _this$props2 = this.props,
          router = _this$props2.router,
          tools = _this$props2.tools;
    return _react.default.createElement(_ToolSwitcherWidget.default, _extends({}, this.props, {
      renderItem: this.renderItem,
      tools: tools.map(tool => {
        return _objectSpread({
          state: router && Object.assign({}, router.state, {
            tool: tool.name
          })
        }, tool);
      })
    }));
  }

}

ToolSwitcher.defaultProps = {
  direction: 'horizontal',
  tools: []
};
ToolSwitcher.propTypes = {
  activeToolName: _propTypes.default.string,
  onSwitchTool: _propTypes.default.func,
  direction: _propTypes.default.oneOf(['horizontal', 'vertical']),
  router: _propTypes.default.shape({
    state: _propTypes.default.object
  }),
  tools: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    icon: _propTypes.default.func
  }))
};

var _default = (0, _router.withRouterHOC)(ToolSwitcher);

exports.default = _default;