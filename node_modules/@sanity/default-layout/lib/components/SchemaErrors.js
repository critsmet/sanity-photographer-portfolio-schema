"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SchemaErrors = SchemaErrors;

var _react = _interopRequireDefault(require("react"));

var _SchemaErrors = _interopRequireDefault(require("./styles/SchemaErrors.css"));

var _errorIcon = _interopRequireDefault(require("part:@sanity/base/error-icon"));

var _warningIcon = _interopRequireDefault(require("part:@sanity/base/warning-icon"));

var _generateHelpUrl = _interopRequireDefault(require("@sanity/generate-help-url"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function renderPath(path) {
  return path.map(segment => {
    if (segment.kind === 'type') {
      return _react.default.createElement("span", {
        className: _SchemaErrors.default.segment
      }, _react.default.createElement("span", {
        key: "name",
        className: _SchemaErrors.default.pathSegmentTypeName
      }, segment.name), "\u2002", _react.default.createElement("span", {
        key: "type",
        className: _SchemaErrors.default.pathSegmentTypeType
      }, segment.type));
    }

    if (segment.kind === 'property') {
      return _react.default.createElement("span", {
        className: _SchemaErrors.default.segment
      }, _react.default.createElement("span", {
        className: _SchemaErrors.default.pathSegmentProperty
      }, segment.name));
    }

    if (segment.kind === 'type') {
      return _react.default.createElement("span", {
        className: _SchemaErrors.default.segment
      }, _react.default.createElement("span", {
        key: "name",
        className: _SchemaErrors.default.pathSegmentTypeName
      }, segment.name), _react.default.createElement("span", {
        key: "type",
        className: _SchemaErrors.default.pathSegmentTypeType
      }, segment.type));
    }

    return null;
  }).filter(Boolean);
}

function SchemaErrors(props) {
  const problemGroups = props.problemGroups;
  return _react.default.createElement("div", {
    className: _SchemaErrors.default.root
  }, _react.default.createElement("h2", {
    className: _SchemaErrors.default.title
  }, "Uh oh\u2026 found errors in schema"), _react.default.createElement("ul", {
    className: _SchemaErrors.default.list
  }, problemGroups.map((group, i) => {
    return _react.default.createElement("li", {
      key: i,
      className: _SchemaErrors.default.listItem
    }, _react.default.createElement("h2", {
      className: _SchemaErrors.default.path
    }, renderPath(group.path)), _react.default.createElement("ul", {
      className: _SchemaErrors.default.problems
    }, group.problems.map((problem, j) => _react.default.createElement("li", {
      key: j,
      className: _SchemaErrors.default[`problem_${problem.severity}`]
    }, _react.default.createElement("div", {
      className: _SchemaErrors.default.problemSeverity
    }, _react.default.createElement("span", {
      className: _SchemaErrors.default.problemSeverityIcon
    }, problem.severity === 'error' && _react.default.createElement(_errorIcon.default, null), problem.severity === 'warning' && _react.default.createElement(_warningIcon.default, null)), _react.default.createElement("span", {
      className: _SchemaErrors.default.problemSeverityText
    }, problem.severity)), _react.default.createElement("div", {
      className: _SchemaErrors.default.problemContent
    }, _react.default.createElement("div", {
      className: _SchemaErrors.default.problemMessage
    }, problem.message), problem.helpId && _react.default.createElement("a", {
      className: _SchemaErrors.default.problemLink,
      href: (0, _generateHelpUrl.default)(problem.helpId),
      target: "_blank"
    }, "View documentation"))))));
  })));
}