"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maybeRedirectToBase = maybeRedirectToBase;
exports.default = void 0;

var _tool = _interopRequireDefault(require("all:part:@sanity/base/tool"));

var _configSanity = require("config:sanity");

var _router = require("part:@sanity/base/router");

var _spaces = require("./util/spaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const basePath = (_configSanity.project && _configSanity.project.basePath || '').replace(/\/+$/, '');
const toolRoute = (0, _router.route)('/:tool', toolParams => {
  const foundTool = _tool.default.find(current => current.name === toolParams.tool);

  return foundTool ? _router.route.scope(foundTool.name, '/', foundTool.router) : (0, _router.route)('/');
});
const spaceRoute = (0, _router.route)('/:space', params => {
  const foundSpace = _spaces.CONFIGURED_SPACES.find(sp => sp.name === params.space);

  return foundSpace ? toolRoute : (0, _router.route)('/');
});
const rootRouter = (0, _router.route)(`${basePath}/`, [_router.route.intents('/intent'), _spaces.HAS_SPACES ? spaceRoute : toolRoute]);

function maybeRedirectToBase() {
  const redirectTo = rootRouter.getRedirectBase(location.pathname);

  if (redirectTo) {
    history.replaceState(null, null, redirectTo);
  }
}

var _default = rootRouter;
exports.default = _default;